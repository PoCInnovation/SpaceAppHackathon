/*
auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import React, { useRef } from 'react'
import { useGLTFLoader } from '@react-three/drei/loaders/useGLTFLoader'
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'

type GLTFResult = GLTF & {
  nodes: {
    ['Cube.004_0']: THREE.Mesh
    ['Cube.004_1']: THREE.Mesh
    ['Cube.004_2']: THREE.Mesh
    Cube006: THREE.Mesh
    ['Cube.006_0']: THREE.Mesh
    ['Cube.006_1']: THREE.Mesh
    Sphere_0: THREE.Mesh
    Sphere_1: THREE.Mesh
  }
  materials: {
    ['CLAY_MODULE_CAMIR.005']: THREE.MeshStandardMaterial
    ['CLAY_MODULE_CAMIR.006']: THREE.MeshStandardMaterial
    ['CLAY_MODULE_CAMIR.007']: THREE.MeshStandardMaterial
    ['CLAY_MODULE_CAMIR.013']: THREE.MeshStandardMaterial
    ['CLAY_MODULE_CAMIR.011']: THREE.MeshStandardMaterial
    ['CLAY_MODULE_CAMIR.002']: THREE.MeshStandardMaterial
    ['CLAY_MODULE_CAMIR.008']: THREE.MeshStandardMaterial
    ['CLAY_MODULE_CAMIR.009']: THREE.MeshStandardMaterial
  }
}

export default function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTFLoader<GLTFResult>('/ArmWithLidar.glb', true)
  return (
    <group ref={group} {...props} dispose={null}>
      <group position={[0.09, -0.01, 0]} rotation={[Math.PI / 2, Math.PI / 3, -Math.PI]} scale={[0.01, 0, 0.09]}>
        <mesh material={materials['CLAY_MODULE_CAMIR.005']} geometry={nodes['Cube.004_0'].geometry} />
        <mesh material={materials['CLAY_MODULE_CAMIR.006']} geometry={nodes['Cube.004_1'].geometry} />
        <mesh material={materials['CLAY_MODULE_CAMIR.007']} geometry={nodes['Cube.004_2'].geometry} />
      </group>
      <mesh
        material={materials['CLAY_MODULE_CAMIR.013']}
        geometry={nodes.Cube006.geometry}
        position={[0.01, 0.03, 0]}
        rotation={[-Math.PI / 2, 0, Math.PI / 2]}
        scale={[0.01, 0, 0.01]}
      />
      <group rotation={[Math.PI / 2, 0, 0]} scale={[0.01, 0.03, 0.05]}>
        <mesh material={materials['CLAY_MODULE_CAMIR.011']} geometry={nodes['Cube.006_0'].geometry} />
        <mesh material={materials['CLAY_MODULE_CAMIR.002']} geometry={nodes['Cube.006_1'].geometry} />
      </group>
      <group position={[0.26, 0.16, 0]} scale={[0.01, 0.01, 0.01]}>
        <mesh material={materials['CLAY_MODULE_CAMIR.008']} geometry={nodes.Sphere_0.geometry} />
        <mesh material={materials['CLAY_MODULE_CAMIR.009']} geometry={nodes.Sphere_1.geometry} />
      </group>
    </group>
  )
}
